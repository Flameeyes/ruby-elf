<?xml version='1.0'?>
<!--
Copyright © 2011, Diego "Flameeyes" Pettenò <flameeyes@gmail.com>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this generator; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->
<article xmlns="http://docbook.org/ns/docbook"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0" xml:lang="en">
  <info>
    <title>elfgrep</title>

    <xi:include parse="xml" href="author.xmli" />
  </info>

  <section>
    <title>Reference</title>

    <refentry>
      <info>
        <date>January 2011</date>
        <productname>ruby-elf</productname>
      </info>
      <refmeta>
        <refentrytitle>elfgrep</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>elfgrep</refname>
        <refpurpose>Search for symbols matching an expression in ELF files</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis>
          <command>elfgrep</command>

          <arg choice="opt">
            <option>--fixed-strings</option>
          </arg>

          <arg choice="opt">
            <option>--ignore-case</option>
          </arg>

          <arg choice="opt">
            <option>--match-version</option>
          </arg>

          <group choice="opt">
            <arg choice="plain">
              <option>--match-undefined</option>
            </arg>

            <arg choice="plain">
              <option>--match-defined</option>
            </arg>
          </group>

          <arg choice="opt">
            <option>--invert-match</option>
          </arg>

          <arg choice="opt">
            <option>--count</option>
          </arg>

          <group choice="opt">
            <arg choice="plain">
              <option>--files-without-match</option>
            </arg>

            <arg choice="plain">
              <option>--files-with-matches</option>
            </arg>
          </group>

          <group choice="opt">
            <arg choice="plain">
              <option>--with-filename</option>
            </arg>

            <arg choice="plain">
              <option>--no-filename</option>
            </arg>
          </group>

          <arg choice="opt">
            <option>--null</option>
          </arg>

          <xi:include href="common.xmli"  xpointer="xpointer(id('filelist.synopsis.options')/*)" />

          <group choice="req">
            <arg choice="plain" rep="repeat">
              <option>--regexp</option>
              <replaceable>PATTERN</replaceable>
            </arg>

            <arg choice="plain">
              <replaceable>PATTERN</replaceable>
            </arg>
          </group>

          <xi:include href="common.xmli"  xpointer="xpointer(id('filelist.synopsis.arguments')/*)" />
        </cmdsynopsis>
      </refsynopsisdiv>

      <refsect1>
        <title>Description</title>
        <para>
          <command>elfgrep</command> is a simple script that allows to earch for particular symbols
          within a file, by matching regular expression on their name. It is insipired by the common
          Unix
          <citerefentry><refentrytitle>grep</refentrytitle><manvolnum>1</manvolnum></citerefentry>
          tool.
        </para>
      </refsect1>

      <refsect1>
        <title>Options</title>

        <refsect2>
          <title>Matching Control</title>

          <variablelist>
            <varlistentry>
              <term><option>-F</option></term>
              <term><option>--fixed-strings</option></term>
              <listitem>
                <para>
                  Interpret <replaceable>PATTERN</replaceable> as a list of fixed strings, separated
                  by newlines, any of which is to be matched.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>
                <option>-e</option>
                <replaceable>PATTERN</replaceable>
              </term>
              <term>
                <option>--regexp</option>
                <replaceable>PATTERN</replaceable>
              </term>

              <listitem>
                <para>
                  Use <replaceable>PATTERN</replaceable> as the pattern. This can be used to specify
                  multiple search patterns, or to protect a pattern beginning with a hyphen
                  (<literal>-</literal>).
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-i</option></term>
              <term><option>--ignore-case</option></term>
              <listitem>
                <para>
                  Ignore case distinction in both the <replaceable>PATTERN</replaceable> and the
                  symbols' names.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-V</option></term>
              <term><option>--match-version</option></term>
              <listitem>
                <para>
                  Append the ELF version information for the symbol, separated by an @ symbol, before
                  testing the expression for match. This allows to match only symbols that are defined
                  with a particular version.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-U</option></term>
              <term><option>--match-undefined</option></term>
              <listitem>
                <para>
                  Report matches on undefined symbols. By default <command>elfgrep</command> will
                  report matches on both defined and undefined symbols. This switch makes it ignore
                  matches on defined symbols.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-D</option></term>
              <term><option>--no-match-defined</option></term>
              <listitem>
                <para>
                  Report matches on defined symbols. By default <command>elfgrep</command> will
                  report matches on both defined and undefined symbols. This switch makes it ignore
                  matches on undefined symbols.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-v</option></term>
              <term><option>--invert-match</option></term>
              <listitem>
                <para>
                  Invert the sense of matching, to select non-matching symbols. This does not invert
                  the sense of <option>--no-match-undefined</option> and
                  <option>--no-match-defined</option>.
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
        </refsect2>

        <refsect2>
          <title>Output Control</title>

          <variablelist>

            <varlistentry>
              <term><option>-c</option></term>
              <term><option>--count</option></term>
              <listitem>
                <para>
                  Suppress normal output; instead print a count of matching lines for each input
                  file. With the <option>--invert-match</option> option, count non-matching lines.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-L</option></term>
              <term><option>--files-without-match</option></term>

              <listitem>
                <para>
                  Suppress normal output; instead print the name of each input file from which no
                  output would normally have been printed.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-l</option></term>
              <term><option>--files-with-matches</option></term>

              <listitem>
                <para>
                  Suppress normal output; instead print the name of each input file from which output
                  would normally have been printed. The scalling will stop on the first match.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-H</option></term>
              <term><option>--with-filename</option></term>

              <listitem>
                <para>
                  Print the file name for each match. This is the default when there is more than one
                  file to search.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-h</option></term>
              <term><option>--no-filename</option></term>

              <listitem>
                <para>
                  Suppress the prefixing of file names on output. This is the default when there is
                  only one file to search.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>-Z</option></term>
              <term><option>--null</option></term>

              <listitem>
                <para>
                  Output a zero byte (the ASCII <literal>NUL</literal> character) instead of the
                  character that normally follows a file name. For example <command>elfgrep
                  -lZ</command> outputs a zero byte after each file name instead of the usual
                  newline. This option makes the output unambiguous, even in presence of file names
                  containing unusual characters like newlines, so that it can be used with commands
                  like <command>xargs -0</command>.
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
        </refsect2>

        <refsect2>
          <title>General Options</title>

          <variablelist>
            <xi:include href="common.xmli" xpointer="xpointer(id('filelist.option')/*)" />
          </variablelist>
        </refsect2>
      </refsect1>

      <refsect1>
        <title>Bugs and Missing Features</title>

        <para>
          By default, <application>elfgrep</application> uses standard Ruby regular expressions,
          which are neither the basic or extended regular expressions as implemented by
          <citerefentry><refentrytitle>grep</refentrytitle><manvolnum>1</manvolnum></citerefentry>
          nor the Perl (or compatible) regular expressions.
        </para>

        <xi:include href="common.xmli" xpointer="xpointer(id('filelist.bugpara')/*)" />
      </refsect1>

      <refsect1>
        <title>See Also</title>
        <para>
          <citation xl:href="http://blog.flameeyes.eu/">Flameeyes's Weblog</citation>
          http://blog.flameeyes.eu/
        </para>

        <para>
          Related tools:

          <citerefentry>
            <refentrytitle>grep</refentrytitle>
            <manvolnum>1</manvolnum>
          </citerefentry>,

          <citerefentry>
            <refentrytitle>rbelf-nm</refentrytitle>
            <manvolnum>1</manvolnum>
          </citerefentry>.
        </para>

        <para>
          Lots of description of options above are lifted directly from the
          <application>grep</application> man page, to avoid confusing with different
          wordings.
        </para>
      </refsect1>
    </refentry>
  </section>
</article>
<!--
    Local Variables:
    mode: nxml
    mode: auto-fill
    mode: flyspell
    ispell-local-dictionary: "english"
    fill-column: 100
    indent-tabs-mode: nil
    End:
-->
